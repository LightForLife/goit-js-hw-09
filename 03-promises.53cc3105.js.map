{"mappings":"AAiBgB,IAAIA,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAaC,KAAKC,SAAW,GACnCC,YAAW,WACLH,GACFF,EAAQ,0CAGaC,EAAhB,iCACN,SAeFK,MAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAIF,GACL,KAERD,MAAK,SAAAI,GAEJ,OADAF,QAAQC,IAAIC,GACL,MAERJ,MAAK,SAAAK,GACJH,QAAQC,IAAIE,MAEbC,OAAM,SAAAC,G,OAASL,QAAQC,IAAII,MAC3BC,SAAQ,W,OAAMN,QAAQC,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\nconst promise = new Promise((resolve, reject) => {\n  const canFulfill = Math.random() > 0.5;\n  setTimeout(() => {\n    if (canFulfill) {\n      resolve('(Промис успешный, результат fulfilled)');\n    }\n\n    reject('(Промис с ошибкой rejected)');\n  }, 1500);\n});\n\n// promise.then(\n//   result => {\n//     console.log(`✅${result}`);\n//   },\n//   error => {\n//     console.log(`❌${error}`);\n//   }\n// );\n\n//цепочка промисов\n\npromise\n  .then(result => {\n    console.log(result);\n    return 5;\n  })\n  .then(x => {\n    console.log(x);\n    return 10;\n  })\n  .then(y => {\n    console.log(y);\n  })\n  .catch(error => console.log(error))\n  .finally(() => console.log('All result'));\n"],"names":["Promise","resolve","reject","canFulfill","Math","random","setTimeout","then","result","console","log","x","y","catch","error","finally"],"version":3,"file":"03-promises.53cc3105.js.map"}