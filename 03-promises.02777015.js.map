{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAG/BH,EAAKC,KAAKG,iBAAiB,UAK3B,SAAyBC,GACvBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOR,EAAKC,KAAKQ,MAAMC,OAC/BC,EAAOH,OAAOR,EAAKC,KAAKU,KAAKD,OAC7BE,EAASJ,OAAOR,EAAKC,KAAKW,OAAOF,OAErC,GAAIH,EAAQ,GAAKI,EAAO,GAAKC,GAAU,EACrC,OAAOd,EAAAe,OAAOC,QAAS,6CAECC,EAAbC,aAAY,WAkB3B,IAAuBC,EAAUR,EAjB7BG,GAAU,EACVM,QAAQC,IAAIP,GACG,IAAXA,GACFQ,cAAcL,IAcGE,EAZLI,EAYeZ,EAZLF,EAanB,IAAIe,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEM,SAAAZ,EAAUR,UAEpBe,EAAO,CAAEK,SAAAZ,EAAUR,YAEpBA,OApBAqB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARF,SAAUpB,EAAKsB,EAALtB,MACjBX,EAAAe,OAAOoB,QAAQ,uBAAwCC,OAAfF,EAAS,QAAYE,OAANzB,EAAM,UAE9D0B,OAAM,SAAAJ,G,IAAGK,EAAQL,EAARF,SAAUpB,EAAKsB,EAALtB,MAClBX,EAAAe,OAAOC,QAAQ,sBAAqCoB,OAAfE,EAAS,QAAYF,OAANzB,EAAM,UAE9DY,GAAY,EACZd,GAASI,IACR,MA3BL,IAAII,EAAa,KACbM,EAAW,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onCreatepromise);\n\nlet intervalId = null;\nlet position = 1;\n\nfunction onCreatepromise(event) {\n  event.preventDefault();\n  let delay = Number(refs.form.delay.value);\n  let step = Number(refs.form.step.value);\n  let amount = Number(refs.form.amount.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    return Notify.failure(`Введите положительные числа и amount > 0 `);\n  }\n  intervalId = setInterval(() => {\n    amount -= 1;\n    console.log(amount);\n    if (amount === 0) {\n      clearInterval(intervalId);\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    position += 1;\n    delay += step;\n  }, 0);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","delay","value","step","amount","Notify","failure","$ce04d3a99e08e73b$var$intervalId","setInterval","position3","console","log","clearInterval","$ce04d3a99e08e73b$var$position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","param","position1","success","concat","catch","position2"],"version":3,"file":"03-promises.02777015.js.map"}