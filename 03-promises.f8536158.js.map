{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAG/BH,EAAKC,KAAKG,iBAAiB,UAK3B,SAAyBC,GACvBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOR,EAAKC,KAAKQ,MAAMC,OAC/BC,EAAOH,OAAOR,EAAKC,KAAKU,KAAKD,OAC7BE,EAASJ,OAAOR,EAAKC,KAAKW,OAAOF,OAErC,GAAIH,EAAQ,GAAKI,EAAO,GAAKC,GAAU,EACrC,OAAOd,EAAAe,OAAOC,QAAQ,6CAEEC,EAAbC,aAAY,KAkB3B,IAAuBC,EAAUR,EAjB7BG,GAAU,EACVM,QAAQC,IAAIP,GACG,IAAXA,GACFQ,cAAcL,IAcGE,EAZLI,EAYeZ,EAZLF,EAanB,IAAIe,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAZ,E,MAAUR,IAEpBe,EAAO,CAAEK,SAAAZ,E,MAAUR,MAEpBA,OApBAqB,MAAK,EAAGD,SAAAE,EAAQtB,MAAEA,MACjBX,EAAAe,OAAOmB,QAAQ,uBAAqBD,QAAiBtB,UAEtDwB,OAAM,EAAGJ,SAAAK,EAAQzB,MAAEA,MAClBX,EAAAe,OAAOC,QAAQ,sBAAoBoB,QAAezB,UAEtDY,GAAY,EACZd,GAASI,IACR,MA3BL,IAAII,EAAa,KACbM,EAAW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('form'),\n};\n\nrefs.form.addEventListener('submit', onCreatepromise);\n\nlet intervalId = null;\nlet position = 1;\n\nfunction onCreatepromise(event) {\n  event.preventDefault();\n  let delay = Number(refs.form.delay.value);\n  let step = Number(refs.form.step.value);\n  let amount = Number(refs.form.amount.value);\n\n  if (delay < 0 || step < 0 || amount <= 0) {\n    return Notify.failure(`Введите положительные числа и amount > 0 `);\n  }\n  intervalId = setInterval(() => {\n    amount -= 1;\n    console.log(amount);\n    if (amount === 0) {\n      clearInterval(intervalId);\n    }\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    position += 1;\n    delay += step;\n  }, 0);\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","addEventListener","event","preventDefault","delay1","Number","delay","value","step","amount","Notify","failure","$47d4ff9957288465$var$intervalId","setInterval","position3","console","log","clearInterval","$47d4ff9957288465$var$position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","then","position1","success","catch","position2"],"version":3,"file":"03-promises.f8536158.js.map"}